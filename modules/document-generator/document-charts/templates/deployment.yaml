kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "documents.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "documents.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "documents.name" . }}
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app.kubernetes.io/name: {{ template "documents.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}"
          ports:
            - containerPort: {{ .Values.service.grpc.port }}
              protocol: {{ .Values.service.grpc.protocol }}
            - containerPort: {{ .Values.service.http.port }}
              protocol: {{ .Values.service.http.protocol }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          env:
            - name: documents_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "documents.name" . }}
                  key: documents-db-user
            - name: documents_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "documents.name" . }}
                  key: documents-db-password
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
