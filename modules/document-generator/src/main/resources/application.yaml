# SensibleMetrics WebDocs Document Generator configuration
---
eureka:
  client:
    enabled: false

server:
  port: 8089
  ssl:
    key-store: modules/document-generator/src/main/resources/key-store.jks
    key-store-password: ENC(pZulM4Rk5Tu1gnpQ5WzifnV4EFPN5RBhFNeImxlij/y2Zxa/Iqlp2S8QpcsqKPBM)
    key-password: ENC(q9chaN0OEEaaUJq3FyS65PZDsSf+PUyP+ssgJzkQa23Ft+KeQ6t3YyKf5IWUVfRE)
    key-store-type: PKCS12
    key-alias: spring-boot-ssl-sample
  http2:
    enabled: true
  compression:
    enabled: true
    min-response-size: 1024
  forward-headers-strategy: FRAMEWORK
  error:
    path: /error
    include-stacktrace: NEVER
    whitelabel:
      enabled: false
  tomcat:
    mbeanregistry:
      enabled: true
    accesslog:
      enabled: true
      pattern: '%t %a "%r" %s (%D ms)'

spring:
  output:
    ansi:
      enabled: NEVER
  main:
    log-startup-info: true
  profiles:
    include: document, addressing, cloud, insecure
  application:
    name: "WebDocs-Document-Generator-WebService"
  messages:
    basename: i18n/common_messages, i18n/messages
    # 1 hour
    cache-duration: 3600
  cache:
    type: JCACHE
    jcache:
      config: classpath:ehcache-config.xml
      provider: org.ehcache.jsr107.EhcacheCachingProvider
  aop:
    proxy-target-class: true
  devtools:
    add-properties: false
  mvc:
    throw-exception-if-no-handler-found: true
    log-resolved-exception: true
    locale-resolver: FIXED
    async:
      # 1 hour
      request-timeout: 3600000
  resources:
    add-mappings: true
    chain:
      strategy:
        content:
          enabled: true
  task:
    execution:
      thread-name-prefix: webdocs-document-generator
      pool:
        core-size: 10
        max-size: 20
        queue-capacity: 100000
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ENC(sOudcFSEBh097zRsLQAJUjCMISOY2+LClylvNrXXCms2R8GHoW9/u5hRYwTR5AnQEo9MUnnVx86zvR+AGH2R1+h0VmHAJbVa+LtYf0nO9V68XnXm10uTL8P9e9M4/Y3w+XZT38ZP64V5NIQBCaOYgabKjN4uv3RoWwZ+jIgbPeM=)
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER:postgres}
    password: ${DB_PASS}
    sql-script-encoding: UTF-8
    initialization-mode: NEVER
    hikari:
      minimum-idle: 5
      maximum-pool-size: 25
      idle-timeout: 30000
      pool-name: WebDocs-DocumentGenerator-HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      transaction-isolation: TRANSACTION_READ_COMMITTED
      isolate-internal-queries: true
      connection-test-query: SELECT 1
      driver-class-name: com.p6spy.engine.spy.P6SpyDriver
      allow-pool-suspension: true
      auto-commit: true
      data-source-properties:
        cache-prep-stmts: true
        prep-stmt-cache-size: 250
        prep-stmt-cache-sql-limit: 2048
        use-server-prep-stmts: true
  transaction:
    rollback-on-commit-failure: true
    # 1 hour
    default-timeout: 3600
  jpa:
    show-sql: true
    open-in-view: false
    generate-ddl: false
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      javax:
        persistence:
          sharedCache:
            #required - enable selective caching mode - only entities with @Cacheable annotation will use L2 cache (ALL)
            mode: ENABLE_SELECTIVE
      hibernate:
        javax:
          cache:
            missing_cache_strategy: create
            provider: org.ehcache.jsr107.EhcacheCachingProvider
        dialect: org.hibernate.dialect.PostgreSQLDialect
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        ejb:
          use_class_enhancer: true
          naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy
        validator:
          apply_to_ddl: true
          autoregister_listeners: true
        order_inserts: true
        order_updates: true
        connection:
          character-encoding: UTF-8
          char-set: UTF-8
          use-unicode: true
          provider-class: com.zaxxer.hikari.hibernate.HikariConnectionProvider
          provider-disables-autocommit: false
          pool-size: 50
          autocommit: true
          auto-reconnect: true
          current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
          release_mode: on_close
        transaction:
          flush_before_completion: true
          auto_close_session: false
        cache:
          region:
            factory_class: org.hibernate.cache.ehcache.internal.EhcacheRegionFactory
          use_query_cache: true
          use_second_level_cache: true
          use_structured_entries: true
          default-cache-concurrency-strategy: TRANSACTIONAL
          configuration-resource-name: classpath:ehcache.xml
        jdbc:
          fetch_size: 50
          batch_size: 30
          batch_versioned_data: true
          time_zone: UTC
        show-sql: true
        format-sql: true
        use-sql-comments: true
        max-fetch-depth: 3
        default-batch-fetch-size: 30
        generate_statistics: true
        enable_lazy_load_no_trans: true
        globally_quoted_identifiers: true
        jdbc.lob.non-contextual-creation: true
        temp.use_jdbc_metadata_defaults: false
        multi-tenant-connection-provider: false
        bytecode.use_reflection_optimizer: false
        current_session_context_class: org.hibernate.context.internal.ThreadLocalSessionContext
    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: false
  liquibase:
    enabled: true
    drop-first: true

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  server:
    servlet:
      context-path: /management
    port: 8088
  info:
    build:
      enabled: false
    git:
      mode: FULL
  endpoint:
    jolokia:
      config:
        debug: true
    beans:
      cache:
        time-to-live: 30s
    shutdown:
      enabled: true
    health:
      show-details: ALWAYS
      show-components: ALWAYS
      cache:
        time-to-live: 30s
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: [ "jolokia", "health", "info", "metrics", "prometheus", "bindings", "beans", "env", "loggers", "streamsbindings", "threaddump", "httptrace", "mappings" ]
      base-path: /actuator
      path-mapping:
        info: status
  metrics:
    tags:
      region: ${spring.application.region:us-east-1}
      type: webdocs
    export:
      prometheus:
        enabled: true
        step: 3m
        pushgateway:
          enabled: false
      jmx:
        enabled: false
      simple:
        enabled: true
        mode: STEP
    enable:
      jvm: false
    web:
      server:
        request:
          autotime:
            enabled: true
      client:
        max-uri-tags: 5
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
      slo:
        http:
          server:
            requests: 20ms,50ms

jasypt:
  encryptor:
    password: ${JASYPT_ENCRYPTOR_PASSWORD:}
---
spring:
  profiles: dev
  boot:
    admin:
      client:
        url: https://localhost:8085/
      ui:
        cache:
          no-cache: true
        cache-templates: false
---
spring:
  profiles: insecure
  boot:
    admin:
      client:
        url: https://localhost:8085/
---
spring:
  profiles: secure
  security:
    user:
      name: ${ADMIN_USER:user}
      password: ${ADMIN_PASSWORD:password}
  boot:
    admin:
      client:
        url: https://localhost:8085/
        username: ${spring.security.user.name}       #These two are needed so that the client
        password: ${spring.security.user.password}   #can register at the protected server api
        instance:
          metadata:
            user:
              name: ${spring.security.user.name}         #These two are needed so that the server
              password: ${spring.security.user.password} #can access the protected client endpoints
