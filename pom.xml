<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sensiblemetrics.api.ws</groupId>
    <artifactId>parent</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>com.sensiblemetrics.api.ws</name>
    <description>WS Documents Parent POM</description>
    <url>https://github.com/AlexRogalskiy/ws-documents/</url>
    <inceptionYear>2020</inceptionYear>

    <organization>
        <name>SensibleMetrics, Inc., Saint-Petersburg (RU)</name>
        <url>https://www.sensible-metrics.com/</url>
    </organization>

    <licenses>
        <license>
            <name>The GNU General Public License, Version 3.0</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
            <comments>GNU General Public License v3.0</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>alexander.rogalskiy</id>
            <name>Alexander Rogalskiy</name>
            <email>alexander.rogalskiy@yandex.ru</email>
            <url>http://github.com/AlexRogalskiy</url>
            <organization>SensibleMetrics, Inc.</organization>
            <organizationUrl>https://www.sensible-metrics.com/</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+3</timezone>
            <properties>
                <github>https://github.com/AlexRogalskiy</github>
            </properties>
        </developer>
    </developers>

    <issueManagement>
        <system>GitHub Issue</system>
        <url>https://github.com/AlexRogalskiy/ws-documents/issues</url>
    </issueManagement>

    <ciManagement>
        <system>GitHub CI</system>
        <url>https://github.com/AlexRogalskiy/ws-documents/actions</url>
        <notifiers>
            <notifier>
                <type>mail</type>
                <sendOnError>true</sendOnError>
                <sendOnFailure>true</sendOnFailure>
                <sendOnSuccess>false</sendOnSuccess>
                <sendOnWarning>false</sendOnWarning>
                <configuration>
                    <address>gitHub-actions@sensiblemetrics.io</address>
                </configuration>
            </notifier>
        </notifiers>
    </ciManagement>

    <distributionManagement>
        <site>
            <id>GitHub</id>
            <name>GitHub Distribution</name>
            <url>scm:git:git@github.com/AlexRogalskiy/ws-documents.git</url>
        </site>
    </distributionManagement>

    <modules>
        <module>modules/all</module>
        <module>modules/actuator</module>
        <module>modules/admin</module>
        <module>modules/caching</module>
        <module>modules/commons</module>
        <module>modules/document-generator</module>
        <module>modules/executor</module>
        <module>modules/logger</module>
        <module>modules/metrics</module>
        <module>modules/router</module>
        <module>modules/security</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>

        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss z</maven.build.timestamp.format>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.testSource>${java.version}</maven.compiler.testSource>
        <maven.compiler.testTarget>${java.version}</maven.compiler.testTarget>
        <maven.multiModuleProjectDirectory>./</maven.multiModuleProjectDirectory>
        <maven.url>localhost</maven.url>
        <maven.version>3.6.0</maven.version>

        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <image.from.path>openjdk:latest</image.from.path>
        <image.to.path>registry.hub.docker.com/alexanderr/ws-documents</image.to.path>
        <version.suffix>alpha</version.suffix>

        <compile-tests.skip>false</compile-tests.skip>
        <enforce.java.skip>false</enforce.java.skip>
        <enforce.maven.skip>false</enforce.maven.skip>
        <enforce.plugin.skip>false</enforce.plugin.skip>
        <excludeDevtools>true</excludeDevtools>
        <failIfNoTests>false</failIfNoTests>
        <repackage.skip>false</repackage.skip>
        <skipTests>false</skipTests>
        <package-tests.skip>true</package-tests.skip>
        <copy-dependencies.skip>true</copy-dependencies.skip>

        <license.licenseName>default</license.licenseName>
        <license.licenseResolver>${project.baseUri}src/license</license.licenseResolver>

        <allure-report.version>2.13.1</allure-report.version>
        <allure.version>2.13.5</allure.version>
        <assertj.version>3.17.2</assertj.version>
        <awaitility-proxy.version>3.1.6</awaitility-proxy.version>
        <awaitility.version>4.0.3</awaitility.version>
        <commons-lang3.version>3.11</commons-lang3.version>
        <commons-compress.version>1.20</commons-compress.version>
        <commons-validator.version>1.7</commons-validator.version>
        <guava.version>29.0-jre</guava.version>
        <hamcrest-matchers.version>2.0.0</hamcrest-matchers.version>
        <hamcrest.version>2.2</hamcrest.version>
        <hibernate-validator.version>6.1.5.Final</hibernate-validator.version>

        <commons-net.version>3.7</commons-net.version>
        <ant-commons-net.version>1.10.8</ant-commons-net.version>
        <ant-nodeps.version>1.8.1</ant-nodeps.version>
        <ant-contrib.version>20020829</ant-contrib.version>
        <antelopetasks.version>3.2.10</antelopetasks.version>

        <jacoco-check.skip>false</jacoco-check.skip>
        <jacoco-rule.line.length>100</jacoco-rule.line.length>
        <jacoco.branches.coverage.percentage.minimum>0.65</jacoco.branches.coverage.percentage.minimum>
        <jacoco.classes.missed.minimum>15</jacoco.classes.missed.minimum>
        <jacoco.complexities.coverage.percentage.minimum>0.57</jacoco.complexities.coverage.percentage.minimum>
        <jacoco.coverage.exclusions>**/application/config/*</jacoco.coverage.exclusions>
        <jacoco.instructions.coverage.percentage.minimum>0.61</jacoco.instructions.coverage.percentage.minimum>
        <jacoco.lines.coverage.percentage.minimum>0.65</jacoco.lines.coverage.percentage.minimum>
        <jacoco.methods.coverage.percentage.minimum>0.57</jacoco.methods.coverage.percentage.minimum>

        <java-hamcrest.version>2.0.0.0</java-hamcrest.version>
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <junit-platform.version>1.7.0</junit-platform.version>
        <junit-quickcheck.version>0.9.1</junit-quickcheck.version>

        <logback.version>1.2.3</logback.version>
        <logback-contrib.version>0.1.5</logback-contrib.version>
        <logstash-logback-encoder.version>6.4</logstash-logback-encoder.version>

        <lombok.version>1.18.12</lombok.version>

        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-build-helper-plugin.version>3.2.0</maven-build-helper-plugin.version>
        <maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <maven-checksum-plugin.version>1.4</maven-checksum-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-check-plugin.version>5.3.2</maven-dependency-check-plugin.version>
        <maven-dependency-check-plugin.version>6.0.2</maven-dependency-check-plugin.version>
        <maven-dependency-plugin.version>3.1.2</maven-dependency-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-findbugs-plugin.version>3.0.5</maven-findbugs-plugin.version>
        <maven-fizzed-plugin.version>1.0.6</maven-fizzed-plugin.version>
        <maven-flatten-plugin.version>1.2.5</maven-flatten-plugin.version>
        <maven-forbiddenapis-plugin.version>3.1</maven-forbiddenapis-plugin.version>
        <maven-git-commit-id-plugin.version>4.0.2</maven-git-commit-id-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-help-plugin.version>3.2.0</maven-help-plugin.version>
        <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
        <maven-jacoco-plugin.version>0.8.6</maven-jacoco-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <maven-asciidoctor-plugin.version>2.1.0</maven-asciidoctor-plugin.version>
        <maven-jib-plugin.version>2.5.2</maven-jib-plugin.version>
        <maven-jvcn-plugin.version>0.0.1</maven-jvcn-plugin.version>
        <maven-license-plugin.version>2.0.0</maven-license-plugin.version>
        <maven-lombok-plugin.version>1.18.12.0</maven-lombok-plugin.version>
        <maven-rpm-plugin.version>2.2.0</maven-rpm-plugin.version>
        <maven-modernizer-plugin.version>2.1.0</maven-modernizer-plugin.version>
        <maven-plugin-os.version>1.6.2</maven-plugin-os.version>
        <maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>
        <maven-project-info-reports-plugin.version>3.1.1</maven-project-info-reports-plugin.version>
        <maven-qameta-allure-plugin.version>2.10.0</maven-qameta-allure-plugin.version>
        <maven-qulice-plugin.version>0.18.19</maven-qulice-plugin.version>
        <maven-release-plugin.version>3.0.0-M1</maven-release-plugin.version>
        <maven-scm-provider-gitexe.version>1.11.2</maven-scm-provider-gitexe.version>
        <maven-scm-api.version>1.11.2</maven-scm-api.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
        <maven-moditect-plugin.version>1.0.0.RC1</maven-moditect-plugin.version>
        <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
        <maven-sonar-plugin.version>3.7.0.1746</maven-sonar-plugin.version>
        <maven-sortpom-plugin.version>2.12.0</maven-sortpom-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-spotbugs-plugin.version>4.0.4</maven-spotbugs-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>
        <maven-toolchains-plugin.version>3.0.0</maven-toolchains-plugin.version>
        <maven-versionizer-plugin.version>1.0.6</maven-versionizer-plugin.version>
        <maven-versions-plugin.version>2.8.1</maven-versions-plugin.version>
        <maven-xml-plugin.version>1.0.2</maven-xml-plugin.version>
        <maven-jasypt-plugin.version>3.0.3</maven-jasypt-plugin.version>

        <micrometer-jvm.version>0.2.0</micrometer-jvm.version>
        <micrometer-prometheus.version>1.5.5</micrometer-prometheus.version>
        <micrometer.version>1.5.5</micrometer.version>
        <jolokia.version>1.6.2</jolokia.version>

        <mockito-helpers.version>2.0.0</mockito-helpers.version>
        <mockito-junit-jupiter.version>3.5.13</mockito-junit-jupiter.version>
        <mockito.version>3.5.13</mockito.version>
        <modernizer.version>2.1.0</modernizer.version>
        <plexus-utils.version>3.3.0</plexus-utils.version>

        <vavr.version>0.10.3</vavr.version>
        <slf4j-api.version>2.0.0-alpha1</slf4j-api.version>

        <spring-boot.version>2.3.4.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.SR8</spring-cloud.version>
        <spring-cloud-kubernetes.version>1.1.6.RELEASE</spring-cloud-kubernetes.version>
        <throwing-function.version>1.5.1</throwing-function.version>

        <validation-api.version>2.0.1.Final</validation-api.version>
        <wsdl4j.version>1.6.3.wso2v3</wsdl4j.version>
    </properties>

    <scm>
        <connection>scm:git:git@github.com/AlexRogalskiy/ws-documents.git
        </connection>
        <developerConnection>
            scm:git:git@github.com:/AlexRogalskiy/ws-documents.git
        </developerConnection>
        <url>
            git://github.com/AlexRogalskiy/ws-documents
        </url>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-kubernetes-dependencies</artifactId>
                <version>${spring-cloud-kubernetes.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Boot library dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-jdbc</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- Spring Cloud Kubernetes library dependencies -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes</artifactId>
            <version>${spring-cloud-kubernetes.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes-config</artifactId>
            <version>${spring-cloud-kubernetes.version}</version>
        </dependency>

        <!-- Logback library dependencies -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-json-classic</artifactId>
            <version>${logback-contrib.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback.contrib</groupId>
            <artifactId>logback-jackson</artifactId>
            <version>${logback-contrib.version}</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>

        <!-- Guava library dependencies -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Throwing functions library dependencies -->
        <dependency>
            <groupId>com.pivovarit</groupId>
            <artifactId>throwing-function</artifactId>
            <version>${throwing-function.version}</version>
        </dependency>

        <!-- Micrometer library dependencies -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>${micrometer.version}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer-prometheus.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.github.mweirauch</groupId>
            <artifactId>micrometer-jvm-extras</artifactId>
            <version>${micrometer-jvm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
            <version>${jolokia.version}</version>
        </dependency>

        <!-- Apache commons library dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${commons-compress.version}</version>
        </dependency>

        <!-- Plexus library dependencies -->
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>${plexus-utils.version}</version>
        </dependency>

        <!-- Modernizer library dependencies -->
        <dependency>
            <groupId>org.gaul</groupId>
            <artifactId>modernizer-maven-annotations</artifactId>
            <version>${modernizer.version}</version>
        </dependency>

        <!-- Hibernate validator library dependencies -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml</groupId>
                    <artifactId>classmate</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <!-- Lombok library dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- Slf4j library dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <!-- Vavr library dependencies -->
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>${vavr.version}</version>
        </dependency>

        <!-- Wsdl4j library dependencies -->
        <dependency>
            <groupId>org.wso2.wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
            <version>${wsdl4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-utils</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Spring Boot test library dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test-autoconfigure</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-library</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Allure reporting library dependencies -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit5</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-java-commons</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Commons validator library dependencies -->
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>${commons-validator.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- AssertJ test library dependencies -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Awaitility test library dependencies -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-proxy</artifactId>
            <version>${awaitility-proxy.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Hamcrest test library dependencies -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>java-hamcrest</artifactId>
            <version>${java-hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>it.ozimov</groupId>
            <artifactId>hamcrest-matchers</artifactId>
            <version>${hamcrest-matchers.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-validator</groupId>
                    <artifactId>commons-validator</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Hibernate validator test library dependencies -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-test-utils</artifactId>
            <version>${hibernate-validator.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit test library dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-migrationsupport</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-console</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mockito test library dependencies -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>it.ozimov</groupId>
            <artifactId>mockito-helpers</artifactId>
            <version>${mockito-helpers.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <directory>${maven.multiModuleProjectDirectory}/.build/bin/${project.name}</directory>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${maven-jib-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>commons-net</groupId>
                            <artifactId>commons-net</artifactId>
                            <version>${commons-net.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant-commons-net</artifactId>
                            <version>${ant-commons-net.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant-nodeps</artifactId>
                            <version>${ant-nodeps.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>ant-contrib</groupId>
                            <artifactId>ant-contrib</artifactId>
                            <version>${ant-contrib.version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>ant</groupId>
                                    <artifactId>ant</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                        <dependency>
                            <groupId>org.tigris.antelope</groupId>
                            <artifactId>antelopetasks</artifactId>
                            <version>${antelopetasks.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${maven-plugin-os.version}</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>com.fizzed</groupId>
                <artifactId>fizzed-watcher-maven-plugin</artifactId>
                <version>${maven-fizzed-plugin.version}</version>
                <configuration>
                    <touchFile>${project.build.directory}/classes/watcher.txt</touchFile>
                    <watches>
                        <watch>
                            <directory>${maven.multiModuleProjectDirectory}/modules/</directory>
                        </watch>
                    </watches>
                    <goals>
                        <goal>compile</goal>
                        <goal>process-classes</goal>
                    </goals>
                    <profiles>
                        <profile>optional-profile-to-activate</profile>
                    </profiles>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <executions>
                    <execution>
                        <id>clean-generated-sources</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <phase>clean</phase>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${java.io.tmpdir}</directory>
                                    <directory>${project.basedir}/src/main/generated-sources</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <configuration>
                    <excludeArtifactIds>spring-boot-devtools</excludeArtifactIds>
                    <outputDirectory>${project.build.directory}/lib/</outputDirectory>
                    <includeScope>runtime</includeScope>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>false</failOnWarning>
                            <ignoreNonCompile>true</ignoreNonCompile>
                            <outputXML>true</outputXML>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${copy-dependencies.skip}</skip>
                        </configuration>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <retryFailedDeploymentCount>10</retryFailedDeploymentCount>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.maven.skip}</skip>
                            <rules>
                                <requireMavenVersion>
                                    <message>You are running an older version of Maven (requires at least Maven
                                        ${maven.version})
                                    </message>
                                    <version>${maven.version}</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.java.skip}</skip>
                            <rules>
                                <requireJavaVersion>
                                    <message>You are running an older version of Java (requires at least JDK
                                        ${java.version})
                                    </message>
                                    <version>[${java.version},)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-plugin</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>${enforce.plugin.skip}</skip>
                            <rules>
                                <requirePluginVersions>
                                    <message>You are running plugins with empty plugin versions</message>
                                    <banLatest>true</banLatest>
                                    <banRelease>true</banRelease>
                                    <banSnapshots>true</banSnapshots>
                                </requirePluginVersions>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>${maven-help-plugin.version}</version>
                <executions>
                    <execution>
                        <id>show-profiles</id>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                        <phase>install</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <compress>true</compress>
                        <manifest>
                            <packageName>${project.groupId}</packageName>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>true</addClasspath>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>${project.artifactId}.${project.version}</customClasspathLayout>
                        </manifest>
                        <manifestEntries>
                            <Contains-Sources>java,class</Contains-Sources>
                            <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                            <Implementation-Title>${project.description}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Build>${project.build.finalName}</Implementation-Build>
                            <Specification-Title>${project.description}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Bundle-License>${project.organization.name}</Bundle-License>
                            <X-Builder>Maven ${maven.version}</X-Builder>
                            <X-Build-Time>${maven.build.timestamp}</X-Build-Time>
                            <X-Build-Os>${os.name}</X-Build-Os>
                        </manifestEntries>
                    </archive>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <skip>${package-tests.skip}</skip>
                            <skipIfEmpty>true</skipIfEmpty>
                            <includes>
                                <include>**/common/</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <localCheckout>true</localCheckout>
                    <pushChanges>false</pushChanges>
                    <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-gitexe</artifactId>
                        <version>${maven-scm-provider-gitexe.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-api</artifactId>
                        <version>${maven-scm-api.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <encoding>${project.build.outputEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${maven-build-helper-plugin.version}</version>
                <executions>
                    <execution>
                        <id>set-product-filename-version</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <name>product.filename.version</name>
                            <value>${project.groupId}-${project.artifactId}</value>
                            <regex>^(\d+(\.\d+)?).*?$</regex>
                            <replacement>$1</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>module-timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <name>module.build.timestamp</name>
                            <pattern>${maven.build.timestamp.format}</pattern>
                            <timeZone>Europe/Moscow</timeZone>
                        </configuration>
                    </execution>
                    <execution>
                        <id>get-cpu-count</id>
                        <goals>
                            <goal>cpu-count</goal>
                        </goals>
                        <configuration>
                            <!-- if not given, 'cpu.count' name is used -->
                            <cpuCount>my.cpu.count</cpuCount>
                        </configuration>
                    </execution>
                    <execution>
                        <id>get-hostname</id>
                        <goals>
                            <goal>hostname</goal>
                        </goals>
                        <configuration>
                            <!-- if not given, 'hostname' name is used -->
                            <hostnameProperty>local.ip</hostnameProperty>
                        </configuration>
                    </execution>
                    <execution>
                        <id>get-local-ip</id>
                        <goals>
                            <goal>local-ip</goal>
                        </goals>
                        <configuration>
                            <!-- if not given, 'local.ip' name is used -->
                            <localIpProperty>local.ip</localIpProperty>
                        </configuration>
                    </execution>
                    <execution>
                        <id>local-timestamp-property</id>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <name>local.build.timestamp</name>
                            <pattern>${maven.build.timestamp.format}</pattern>
                            <timeZone>Europe/Moscow</timeZone>
                            <timeSource>build</timeSource>
                        </configuration>
                    </execution>
                    <execution>
                        <id>released-version</id>
                        <goals>
                            <goal>released-version</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>remove-old-installers</id>
                        <goals>
                            <goal>remove-project-artifact</goal>
                        </goals>
                        <configuration>
                            <removeAll>true</removeAll>
                        </configuration>
                    </execution>
                    <execution>
                        <id>maven-version</id>
                        <goals>
                            <goal>maven-version</goal>
                        </goals>
                    </execution>
                    <execution>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/main/generated-sources/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${maven-versions-plugin.version}</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
                <executions>
                    <execution>
                        <id>show-plugin-versions</id>
                        <goals>
                            <goal>display-dependency-updates</goal>
                            <goal>display-plugin-updates</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco-plugin.version}</version>
                <configuration>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>default-jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <skip>${jacoco-check.skip}</skip>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.instructions.coverage.percentage.minimum}</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>${jacoco.classes.missed.minimum}</maximum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.lines.coverage.percentage.minimum}</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.branches.coverage.percentage.minimum}</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.complexities.coverage.percentage.minimum}</minimum>
                                        </limit>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>METHOD</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.methods.coverage.percentage.minimum}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${maven-sonar-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <outputDirectory>${project.build.directory}/release</outputDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <version>${maven-changes-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
                <version>${maven-plugin-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <configuration>
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>modules</report>
                            <report>dependencies</report>
                            <report>dependency-info</report>
                            <report>mailing-lists</report>
                            <report>dependency-convergence</report>
                            <report>distribution-management</report>
                            <report>dependency-management</report>
                            <report>plugin-management</report>
                            <report>issue-management</report>
                            <report>ci-management</report>
                            <report>licenses</report>
                            <report>plugins</report>
                            <report>summary</report>
                            <report>team</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>central-1</id>
            <name>Central Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>projectlombok.org</id>
            <name>ProjectLombok repo</name>
            <url>https://projectlombok.org/edge-releases</url>
            <layout>default</layout>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <!-- Debug profile -->
        <profile>
            <id>debug</id>
            <properties>
                <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
            </properties>
        </profile>

        <!-- Versionizer profile-->
        <profile>
            <id>versionizer</id>
            <properties>
                <version-java-package>com.sensiblemetrics.api.ws</version-java-package>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.fizzed</groupId>
                        <artifactId>fizzed-versionizer-maven-plugin</artifactId>
                        <version>${maven-versionizer-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-version-class</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <javaPackage>${version-java-package}</javaPackage>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- RPM profile -->
        <profile>
            <id>rpm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>${maven-rpm-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <group>${project.groupId}</group>
                            <mappings>
                                <mapping>
                                    <directory>/var/application</directory>
                                    <filemode>755</filemode>
                                    <username>webdocs</username>
                                    <groupname>webdocs</groupname>
                                    <dependency>
                                        <stripVersion>true</stripVersion>
                                        <includes>
                                            <include>${project.groupId}:webdocs-app</include>
                                        </includes>
                                    </dependency>
                                </mapping>
                                <mapping>
                                    <directory>/etc/systemd/system</directory>
                                    <filemode>755</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <sources>
                                        <source>
                                            <location>{basedir}/rpm/systemd</location>
                                        </source>
                                    </sources>
                                </mapping>
                            </mappings>
                            <preinstallScriptlet>
                                <scriptFile>{basedir}/rpm/preinstall.sh</scriptFile>
                                <fileEncoding>utf-8</fileEncoding>
                                <filter>true</filter>
                            </preinstallScriptlet>
                            <postinstallScriptlet>
                                <scriptFile>{basedir}/rpm/postinstall.sh</scriptFile>
                                <fileEncoding>utf-8</fileEncoding>
                                <filter>true</filter>
                            </postinstallScriptlet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Lombok profile -->
        <profile>
            <id>delombok</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-maven-plugin</artifactId>
                        <version>${maven-lombok-plugin.version}</version>
                        <configuration>
                            <sourceDirectory>src/main/java</sourceDirectory>
                            <addOutputDirectory>false</addOutputDirectory>
                            <outputDirectory>${project.build.directory}/generated-sources/delombok</outputDirectory>
                            <verbose>true</verbose>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>delombok</goal>
                                </goals>
                                <phase>generate-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- JVCN profile -->
        <profile>
            <id>jvcn</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>us.vchain</groupId>
                        <artifactId>jvcn-maven-plugin</artifactId>
                        <version>${maven-jvcn-plugin.version}</version>
                        <configuration>
                            <failOnError>false</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <id>audit</id>
                                <goals>
                                    <goal>audit</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Flatten pom profile -->
        <profile>
            <id>flatten-pom</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                        <version>${maven-flatten-plugin.version}</version>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>flatten</id>
                                <goals>
                                    <goal>flatten</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <updatePomFile>true</updatePomFile>
                                    <flattenMode>oss</flattenMode>
                                    <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <pomElements>
                                        <properties>remove</properties>
                                        <parent>expand</parent>
                                        <distributionManagement>remove</distributionManagement>
                                        <dependencyManagement>resolve</dependencyManagement>
                                        <repositories>remove</repositories>
                                        <pluginManagement>keep</pluginManagement>
                                        <dependencies>keep</dependencies>
                                        <build>keep</build>
                                    </pomElements>
                                </configuration>
                            </execution>
                            <execution>
                                <id>flatten.clean</id>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <phase>clean</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- SortPom profile -->
        <profile>
            <id>sortpom</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.ekryd.sortpom</groupId>
                        <artifactId>sortpom-maven-plugin</artifactId>
                        <version>${maven-sortpom-plugin.version}</version>
                        <configuration>
                            <createBackupFile>false</createBackupFile>
                            <nrOfIndentSpace>4</nrOfIndentSpace>
                            <createBackupFile>false</createBackupFile>
                            <predefinedSortOrder>custom_1</predefinedSortOrder>
                            <lineSeparator>\n</lineSeparator>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <sortProperties>true</sortProperties>
                            <keepBlankLines>true</keepBlankLines>
                            <sortDependencies>groupId,artifactId</sortDependencies>
                            <sortPlugins>groupId,artifactId</sortPlugins>
                            <expandEmptyElements>false</expandEmptyElements>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- GPG profile -->
        <profile>
            <id>sign-artifacts</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <gpg.keyname>key</gpg.keyname>
                <gpg.passphrase>password</gpg.passphrase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <ascDirectory>.</ascDirectory>
                                    <keyname>${gpg.keyname}</keyname>
                                    <passphrase>${gpg.passphrase}</passphrase>
                                    <gpgArguments>
                                        <arg>--allow-weak-digest-algos</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Checkstyle profile -->
        <profile>
            <id>checkstyle</id>
            <properties>
                <checkstyle-check.skip>false</checkstyle-check.skip>
                <checkstyle.consoleOutput>true</checkstyle.consoleOutput>
                <checkstyle.enableSummary>false</checkstyle.enableSummary>
                <checkstyle.failOnError>true</checkstyle.failOnError>
                <checkstyle.failOnViolation>true</checkstyle.failOnViolation>
                <checkstyle.includeResources>false</checkstyle.includeResources>
                <checkstyle.includeTestSourceDirectory>false</checkstyle.includeTestSourceDirectory>
                <checkstyle.linkXRef>false</checkstyle.linkXRef>
                <checkstyle.logToConsole>true</checkstyle.logToConsole>

                <checkstyle.version>8.36.1</checkstyle.version>
                <checkstyle.violationSeverity>warning</checkstyle.violationSeverity>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                        <configuration>
                            <configLocation>${project.basedir}/checkstyle/checkstyle.xml</configLocation>
                            <suppressionsLocation>${project.basedir}/checkstyle/checkstyle-suppression.xml
                            </suppressionsLocation>
                            <failsOnError>${checkstyle.failOnError}</failsOnError>
                            <failOnViolation>${checkstyle.failOnViolation}</failOnViolation>
                            <enableRulesSummary>${checkstyle.enableSummary}</enableRulesSummary>
                            <includeResources>${checkstyle.includeResources}</includeResources>
                            <includeTestSourceDirectory>${checkstyle.includeTestSourceDirectory}
                            </includeTestSourceDirectory>
                            <logViolationsToConsole>${checkstyle.logToConsole}</logViolationsToConsole>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
                            <violationSeverity>${checkstyle.violationSeverity}</violationSeverity>
                            <linkXRef>${checkstyle.linkXRef}</linkXRef>
                            <maxAllowedViolations>0</maxAllowedViolations>
                            <includeTestResources>false</includeTestResources>
                            <skip>${checkstyle-check.skip}</skip>
                            <propertyExpansion>lineLength=${jacoco-rule.line.length}</propertyExpansion>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>${checkstyle.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>checkstyle-validation</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>validate</phase>
                                <inherited>true</inherited>
                                <configuration>
                                    <consoleOutput>true</consoleOutput>
                                    <failsOnError>true</failsOnError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Forbidden API profile -->
        <profile>
            <id>forbidden-api</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>de.thetaphi</groupId>
                        <artifactId>forbiddenapis</artifactId>
                        <version>${maven-forbiddenapis-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>check-forbidden-apis</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <targetVersion>${java.version}</targetVersion>
                                    <internalRuntimeForbidden>true</internalRuntimeForbidden>
                                    <failOnUnsupportedJava>false</failOnUnsupportedJava>
                                    <failOnMissingClasses>false</failOnMissingClasses>
                                    <bundledSignatures>
                                        <bundledSignature>jdk-unsafe</bundledSignature>
                                        <bundledSignature>jdk-deprecated</bundledSignature>
                                        <bundledSignature>jdk-internal</bundledSignature>
                                        <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                                        <bundledSignature>jdk-non-portable</bundledSignature>
                                        <bundledSignature>jdk-reflection</bundledSignature>
                                        <bundledSignature>jdk-system-out</bundledSignature>
                                    </bundledSignatures>
                                </configuration>
                            </execution>
                            <execution>
                                <id>check-forbidden-apis-tests</id>
                                <goals>
                                    <goal>testCheck</goal>
                                </goals>
                                <configuration>
                                    <targetVersion>${java.version}</targetVersion>
                                    <internalRuntimeForbidden>true</internalRuntimeForbidden>
                                    <failOnUnsupportedJava>false</failOnUnsupportedJava>
                                    <failOnMissingClasses>false</failOnMissingClasses>
                                    <bundledSignatures>
                                        <bundledSignature>jdk-unsafe</bundledSignature>
                                        <bundledSignature>jdk-deprecated</bundledSignature>
                                        <bundledSignature>jdk-internal</bundledSignature>
                                        <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                                        <bundledSignature>jdk-non-portable</bundledSignature>
                                        <bundledSignature>jdk-reflection</bundledSignature>
                                    </bundledSignatures>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Security profile -->
        <profile>
            <id>security</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${maven-dependency-check-plugin.version}</version>
                        <configuration>
                            <format>HTML</format>
                            <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                            <cveValidForHours>12</cveValidForHours>
                            <failBuildOnCVSS>1</failBuildOnCVSS>
                            <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                            <suppressionFiles>
                                <suppressionFile>${project.basedir}/security/ignore.xml</suppressionFile>
                            </suppressionFiles>
                        </configuration>
                        <executions>
                            <execution>
                                <id>aggregate</id>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Find bugs profile -->
        <profile>
            <id>find-bugs</id>
            <properties>
                <findbugs-check.skip>false</findbugs-check.skip>
                <spotbugs.version>4.1.2</spotbugs.version>
            </properties>
            <build>
                <plugins>

                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${maven-spotbugs-plugin.version}</version>
                        <configuration>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <xmlOutput>false</xmlOutput>
                            <excludeFilterFile>${project.basedir}/checkstyle/excludeFilter.xml</excludeFilterFile>
                            <skip>${findbugs-check.skip}</skip>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.github.spotbugs</groupId>
                                <artifactId>spotbugs</artifactId>
                                <version>${spotbugs.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.qulice</groupId>
                        <artifactId>qulice-maven-plugin</artifactId>
                        <version>${maven-qulice-plugin.version}</version>
                        <configuration>
                            <license>file:${basedir}/COPYING</license>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <version>${maven-findbugs-plugin.version}</version>
                        <configuration>
                            <findbugsXmlOutput>true</findbugsXmlOutput>
                            <failOnError>false</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Compile with debug profile -->
        <profile>
            <id>compile-with-debug</id>
            <properties>
                <maven.compiler.debug>true</maven.compiler.debug>
                <maven.compiler.debuglevel>lines,vars,source</maven.compiler.debuglevel>
                <maven.compiler.verbose>true</maven.compiler.verbose>
            </properties>
        </profile>

        <!-- Toolchain profile -->
        <profile>
            <id>toolchain</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-toolchains-plugin</artifactId>
                        <version>${maven-toolchains-plugin.version}</version>
                        <configuration>
                            <toolchains>
                                <jdk>
                                    <version>${maven.compiler.source}</version>
                                </jdk>
                            </toolchains>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>toolchain</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Generate build properties profile -->
        <profile>
            <id>generate-build-properties</id>
            <activation>
                <file>
                    <exists>${basedir}/src</exists>
                </file>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <version>${maven-antrun-plugin.version}</version>
                            <dependencies>
                                <dependency>
                                    <groupId>commons-net</groupId>
                                    <artifactId>commons-net</artifactId>
                                    <version>${commons-net.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.ant</groupId>
                                    <artifactId>ant-commons-net</artifactId>
                                    <version>${ant-commons-net.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.ant</groupId>
                                    <artifactId>ant-nodeps</artifactId>
                                    <version>${ant-nodeps.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>ant-contrib</groupId>
                                    <artifactId>ant-contrib</artifactId>
                                    <version>${ant-contrib.version}</version>
                                    <exclusions>
                                        <exclusion>
                                            <groupId>ant</groupId>
                                            <artifactId>ant</artifactId>
                                        </exclusion>
                                    </exclusions>
                                </dependency>
                                <dependency>
                                    <groupId>org.tigris.antelope</groupId>
                                    <artifactId>antelopetasks</artifactId>
                                    <version>${antelopetasks.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>setup-maven-properties</id>
                                    <phase>validate</phase>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <configuration>
                                        <exportAntProperties>true</exportAntProperties>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>generate-build-properties</id>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <phase>generate-resources</phase>
                                    <configuration>
                                        <target>
                                            <mkdir dir="${project.build.directory}/classes/"/>
                                            <propertyfile file="${project.build.directory}/classes/build.properties">
                                                <entry key="pom.name" value="${project.name}"/>
                                                <entry key="pom.groupId" value="${project.groupId}"/>
                                                <entry key="pom.artifactId" value="${project.artifactId}"/>
                                                <entry key="pom.version" value="${project.version}"/>
                                                <entry key="pom.packaging" value="${project.packaging}"/>
                                                <entry key="git.branch" value="${git.branch}"/>
                                                <entry key="git.commit.tags" value="${git.tags}"/>
                                                <entry key="git.commit.id" value="${git.commit.id}"/>
                                                <entry key="git.commit.id.describe" value="${git.commit.id.describe}"/>
                                                <entry key="git.commit.id.abbrev" value="${git.commit.id.abbrev}"/>
                                                <entry key="git.commit.user.name" value="${git.commit.user.name}"/>
                                                <entry key="git.commit.user.email" value="${git.commit.user.email}"/>
                                                <entry key="git.commit.message.full"
                                                       value="${git.commit.message.full}"/>
                                                <entry key="git.commit.message.short"
                                                       value="${git.commit.message.short}"/>
                                                <entry key="git.commit.time" value="${git.commit.time}"/>
                                            </propertyfile>
                                        </target>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>pl.project13.maven</groupId>
                            <artifactId>git-commit-id-plugin</artifactId>
                            <version>${maven-git-commit-id-plugin.version}</version>
                            <configuration>
                                <verbose>false</verbose>
                                <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                                <generateGitPropertiesFile>true</generateGitPropertiesFile>
                                <generateGitPropertiesFilename>target/generated-sources/versions/version.properties
                                </generateGitPropertiesFilename>
                                <gitDescribe>
                                    <skip>false</skip>
                                    <always>true</always>
                                    <abbrev>7</abbrev>
                                    <dirty>-dirty</dirty>
                                </gitDescribe>
                                <skipPoms>false</skipPoms>
                                <runOnlyOnce>true</runOnlyOnce>
                                <failOnNoGitDirectory>false</failOnNoGitDirectory>
                                <verbose>false</verbose>
                                <prefix>git</prefix>
                                <generateGitPropertiesFile>true</generateGitPropertiesFile>
                                <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                                </generateGitPropertiesFilename>
                                <dateFormat>yyyy-MM-dd'T'HH:mm:ss.SSSZ</dateFormat>
                                <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                                <includeOnlyProperties>
                                    <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                                    <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
                                    <includeOnlyProperty>^git.branch$</includeOnlyProperty>
                                </includeOnlyProperties>
                                <excludeProperties>
                                    <excludeProperty>git.closest.tag.commit.count</excludeProperty>
                                    <excludeProperty>git.closest.tag.name</excludeProperty>
                                </excludeProperties>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>set-git-properties</id>
                                    <goals>
                                        <goal>revision</goal>
                                    </goals>
                                    <phase>initialize</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Unit tests with code coverage profile -->
        <profile>
            <id>unit-test</id>
            <properties>
                <parallel.tests>2</parallel.tests>
                <test-groups.include/>

                <surefire.commands>
                    -Duser.language=en
                    -Duser.country=GB
                    --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                    --illegal-access=permit
                    --enable-preview
                </surefire.commands>
                <surefire.fileEncoding>-Dfile.encoding=${project.build.sourceEncoding}</surefire.fileEncoding>
                <surefire.jmxEnabled>-Dcom.sun.management.jmxremote=false</surefire.jmxEnabled>
                <surefire.memory>
                    -Xmx1024m
                    -Dsun.zip.disableMemoryMapping=true
                </surefire.memory>
                <surefire.stackVersion>-Djava.net.preferIPv4Stack=true</surefire.stackVersion>
                <surefire.timezone>-Duser.timezone=US/Eastern</surefire.timezone>

                <unit-tests.fail>${failIfNoTests}</unit-tests.fail>
                <unit-tests.skip>${skipTests}</unit-tests.skip>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${maven-surefire-plugin.version}</version>
                            <configuration>
                                <disableXmlReport>true</disableXmlReport>
                                <skipTests>${unit-tests.skip}</skipTests>
                                <groups>${test-groups.include}</groups>
                                <reportFormat>plain</reportFormat>
                                <testFailureIgnore>false</testFailureIgnore>
                                <useSystemClassLoader>false</useSystemClassLoader>
                                <printSummary>true</printSummary>
                                <useFile>false</useFile>
                                <forkedProcessTimeoutInSeconds>21600</forkedProcessTimeoutInSeconds>
                                <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                <failIfNoTests>${unit-tests.fail}</failIfNoTests>
                                <argLine>
                                    ${surefire.memory}
                                    ${surefire.fileEncoding}
                                    ${surefire.jmxEnabled}
                                    ${surefire.stackVersion}
                                    ${surefire.timezone}
                                    ${surefire.commands}
                                </argLine>
                                <includes>
                                    <include/>
                                </includes>
                                <properties>
                                    <systemPropertyVariables>
                                        <reportDirectory>${project.build.directory}/allure-report</reportDirectory>
                                        <allure.results.directory>${project.build.directory}/allure-results
                                        </allure.results.directory>
                                        <java.awt.headless>true</java.awt.headless>
                                    </systemPropertyVariables>
                                </properties>
                            </configuration>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-report-plugin</artifactId>
                            <version>${maven-surefire-report-plugin.version}</version>
                            <configuration>
                                <showSuccess>false</showSuccess>
                            </configuration>
                        </plugin>

                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${maven-jacoco-plugin.version}</version>
                            <configuration>
                                <excludes>
                                    <exclude>${jacoco.coverage.exclusions}</exclude>
                                </excludes>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>before-tests</id>
                                    <goals>
                                        <goal>prepare-agent</goal>
                                    </goals>
                                    <phase>process-test-classes</phase>
                                    <configuration>
                                        <skip>${unit-tests.skip}</skip>
                                        <!-- Sets the path to the file which contains the execution data. -->
                                        <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                        <!--
                                            Sets the name of the property containing the settings
                                            for JaCoCo runtime agent.
                                        -->
                                        <propertyName>surefireArgLine</propertyName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>after-tests</id>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                    <phase>test</phase>
                                    <configuration>
                                        <skip>${unit-tests.skip}</skip>
                                        <!-- Sets the path to the file which contains the execution data. -->
                                        <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                        <!-- Sets the output directory for the code coverage report. -->
                                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut
                                        </outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <!-- Use in lifecycle -->
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Integration tests with code coverage profile -->
        <profile>
            <id>integration-test</id>
            <properties>
                <failsafe.commands>
                    -Duser.language=en
                    -Duser.country=GB
                    --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                    --illegal-access=permit
                    --enable-preview
                </failsafe.commands>

                <failsafe.memory>-Xmx512m</failsafe.memory>
                <failsafe.timezone>-Duser.timezone=US/Eastern</failsafe.timezone>
                <integration-tests.fail>${failIfNoTests}</integration-tests.fail>

                <integration-tests.skip>${skipTests}</integration-tests.skip>
                <parallel.tests>2</parallel.tests>
                <test-groups.include/>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${maven-failsafe-plugin.version}</version>
                            <configuration>
                                <disableXmlReport>true</disableXmlReport>
                                <skipTests>${integration-tests.skip}</skipTests>
                                <groups>${test-groups.include}</groups>
                                <threadCount>${parallel.tests}</threadCount>
                                <forkCount>${parallel.tests}</forkCount>
                                <reuseForks>true</reuseForks>
                                <failIfNoTests>${integration-tests.fail}</failIfNoTests>
                                <argLine>
                                    ${failsafe.memory}
                                    ${failsafe.timezone}
                                    ${failsafe.commands}
                                </argLine>
                                <useFile>false</useFile>
                                <reportFormat>plain</reportFormat>
                                <parallel>classes</parallel>
                                <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                <trimStackTrace>false</trimStackTrace>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>integration-test</id>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${maven-jacoco-plugin.version}</version>
                            <configuration>
                                <excludes>
                                    <exclude>${jacoco.coverage.exclusions}</exclude>
                                </excludes>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>before-tests</id>
                                    <goals>
                                        <goal>prepare-agent-integration</goal>
                                    </goals>
                                    <phase>pre-integration-test</phase>
                                    <configuration>
                                        <skip>${integration-tests.skip}</skip>
                                        <!-- Sets the path to the file which contains the execution data. -->
                                        <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                                        <!--
                                            Sets the name of the property containing the settings
                                            for JaCoCo runtime agent.
                                        -->
                                        <propertyName>failsafeArgLine</propertyName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>after-tests</id>
                                    <goals>
                                        <goal>report-integration</goal>
                                    </goals>
                                    <phase>post-integration-test</phase>
                                    <configuration>
                                        <skip>${integration-tests.skip}</skip>
                                        <!-- Sets the path to the file which contains the execution data. -->
                                        <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                        <!-- Sets the output directory for the code coverage report. -->
                                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-it
                                        </outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Prometheus profile -->
        <profile>
            <id>prometheus</id>
            <activation>
                <property>
                    <name>prometheus.pushgateway.enabled</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <management.metrics.export.prometheus.pushgateway.enabled>${prometheus.pushgateway.enabled}
                </management.metrics.export.prometheus.pushgateway.enabled>
                <prometheus-simpleclient.version>0.9.0</prometheus-simpleclient.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>io.prometheus</groupId>
                    <artifactId>simpleclient</artifactId>
                    <version>${prometheus-simpleclient.version}</version>
                </dependency>
                <dependency>
                    <groupId>io.prometheus</groupId>
                    <artifactId>simpleclient_pushgateway</artifactId>
                    <version>${prometheus-simpleclient.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <!-- Source profile -->
        <profile>
            <id>source</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-source-plugin</artifactId>
                            <version>${maven-source-plugin.version}</version>
                            <configuration>
                                <classifier>sources</classifier>
                                <archive>
                                    <manifest>
                                        <packageName>${project.groupId}</packageName>
                                        <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                        <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    </manifest>
                                    <manifestEntries>
                                        <Specification-Version>${project.version}</Specification-Version>
                                        <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                                        <Bundle-Name>${project.name} Sources</Bundle-Name>
                                        <Bundle-SymbolicName>${project.artifactId}.sources</Bundle-SymbolicName>
                                        <Bundle-Vendor>${project.organization.name} Sources</Bundle-Vendor>
                                        <Bundle-License>LGPL-3-Clause</Bundle-License>
                                        <Eclipse-SourceBundle>${project.artifactId};version=${project.version}
                                        </Eclipse-SourceBundle>
                                        <X-Compile-Source>${maven.compiler.source}</X-Compile-Source>
                                        <X-Compile-Target>${maven.compiler.target}</X-Compile-Target>
                                        <X-Builder>Maven ${maven.version}</X-Builder>
                                        <X-Build-Time>${maven.build.timestamp}</X-Build-Time>
                                        <X-Build-Os>${os.name}</X-Build-Os>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>attach-source</id>
                                    <goals>
                                        <goal>jar-no-fork</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Modernizer profile -->
        <profile>
            <id>modernizer</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.gaul</groupId>
                        <artifactId>modernizer-maven-plugin</artifactId>
                        <version>${maven-modernizer-plugin.version}</version>
                        <configuration>
                            <javaVersion>${java.version}</javaVersion>
                            <violationsFiles>
                                <violationsFile>${project.basedir}/src/modernizer/violations.xml</violationsFile>
                            </violationsFiles>
                            <exclusionPatterns>
                                <exclusionPattern>org/joda/time/.*</exclusionPattern>
                            </exclusionPatterns>
                        </configuration>
                        <executions>
                            <execution>
                                <id>modernizer</id>
                                <goals>
                                    <goal>modernizer</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Ascii-doctor profile -->
        <profile>
            <id>ascii-doctor</id>
            <properties>
                <asciidoctorj-pdf.version>1.5.3</asciidoctorj-pdf.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctor-maven-plugin</artifactId>
                        <version>${maven-asciidoctor-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.asciidoctor</groupId>
                                <artifactId>asciidoctorj-pdf</artifactId>
                                <version>${asciidoctorj-pdf.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <sourceDocumentName>index.adoc</sourceDocumentName>
                            <doctype>book</doctype>
                            <attributes>
                                <allow-uri-read>true</allow-uri-read>
                                <attribute-missing>warn</attribute-missing>
                                <project-version>${project.version}</project-version>
                                <project-artifactId>${project.artifactId}</project-artifactId>
                            </attributes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-html5</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>process-asciidoc</goal>
                                </goals>
                                <configuration>
                                    <backend>html5</backend>
                                    <attributes>
                                        <toc2/>
                                    </attributes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Javadoc profile -->
        <profile>
            <id>javadoc</id>
            <properties>
                <javadoc.properties>
                    -Xdoclint:none
                    -J-Xmx1024m
                    -notimestamp
                    -link http://docs.oracle.com/javase/8/docs/api/
                </javadoc.properties>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>${maven-javadoc-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>attach-javadoc</id>
                                    <goals>
                                        <goal>jar</goal>
                                    </goals>
                                    <phase>prepare-package</phase>
                                    <configuration>
                                        <includeDependencySources>true</includeDependencySources>
                                        <dependencySourceIncludes>
                                            <dependencySourceInclude>${project.groupId}:*</dependencySourceInclude>
                                        </dependencySourceIncludes>
                                        <attach>false</attach>
                                        <quiet>true</quiet>
                                        <stylesheetfile>${basedir}/src/main/javadoc/spring-javadoc.css</stylesheetfile>
                                        <links>
                                            <link>
                                                http://docs.spring.io/spring-framework/docs/${spring-boot.version}/javadoc-api/
                                            </link>
                                            <link>http://docs.spring.io/spring-shell/docs/current/api/</link>
                                        </links>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>xml-maven-plugin</artifactId>
                            <version>${maven-xml-plugin.version}</version>
                            <configuration>
                                <transformationSets>
                                    <transformationSet>
                                        <dir>${project.build.directory}/generated-resources/xml-javadoc</dir>
                                        <includes>
                                            <include>${project.artifactId}-${project.version}-javadoc.xml</include>
                                        </includes>
                                        <outputDir>${project.build.directory}/generated-resources/xml-javadoc
                                        </outputDir>
                                    </transformationSet>
                                </transformationSets>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>transform-xmljavadoc</id>
                                    <goals>
                                        <goal>transform</goal>
                                    </goals>
                                    <phase>generate-resources</phase>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <version>${maven-antrun-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>package-and-attach-docs-zip</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <configuration>
                                        <target>
                                            <zip destfile="${project.build.directory}/${project.artifactId}-${project.version}.zip">
                                                <zipfileset dir="${project.build.directory}/generated-docs"
                                                            prefix="reference/htmlsingle">
                                                    <include name="index.html"/>
                                                    <include name="images/**"/>
                                                </zipfileset>
                                            </zip>
                                        </target>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>build-helper-maven-plugin</artifactId>
                            <version>${maven-javadoc-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>attach-zip</id>
                                    <goals>
                                        <goal>attach-artifact</goal>
                                    </goals>
                                    <configuration>
                                        <artifacts>
                                            <artifact>
                                                <file>
                                                    ${project.build.directory}/${project.artifactId}-${project.version}.zip
                                                </file>
                                                <type>zip;zip.type=docs;zip.deployed=false</type>
                                            </artifact>
                                        </artifacts>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Assembly profile -->
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <configuration>
                            <appendAssemblyId>true</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                            <finalName>${project.groupId}-${project.artifactId}-${project.version}</finalName>
                            <descriptors>
                                <descriptor>${project.basedir}/assembly/package.xml</descriptor>
                            </descriptors>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>package</id>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Checksum profile -->
        <profile>
            <id>checksum</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.ju-n.maven.plugins</groupId>
                        <artifactId>checksum-maven-plugin</artifactId>
                        <version>${maven-checksum-plugin.version}</version>
                        <configuration>
                            <algorithms>
                                <algorithm>MD5</algorithm>
                                <algorithm>SHA-256</algorithm>
                            </algorithms>
                            <csvSummary>false</csvSummary>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                </fileSet>
                            </fileSets>
                        </configuration>
                        <executions>
                            <execution>
                                <id>checksum-artifacts</id>
                                <goals>
                                    <goal>artifacts</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                            <execution>
                                <id>generate-artifact-checksum</id>
                                <goals>
                                    <goal>files</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- JDK 8 and minor versions -->
        <profile>
            <id>non_module_java</id>
            <activation>
                <jdk>(,8]</jdk>
            </activation>
            <properties>
                <compilerArgs>-XDignore.symbol.file
                    -Xlint:all
                </compilerArgs>
                <java.version>8</java.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>
                            <executable>true</executable>
                            <showDeprecation>true</showDeprecation>
                            <debug>true</debug>
                            <debuglevel>lines,vars,source</debuglevel>
                            <optimize>false</optimize>
                            <verbose>false</verbose>

                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <encoding>${project.build.outputEncoding}</encoding>
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>9.0</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>default-testCompile</id>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <phase>test-compile</phase>
                                <configuration>
                                    <skip>${compile-tests.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- JDK 11 and major versions -->
        <profile>
            <id>module_java</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
            <properties>
                <compilerArgs>-XX:-OmitStackTraceInFastThrow
                    --illegal-access=permit
                    --enable-preview
                </compilerArgs>
                <java.version>11</java.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.jaxb</groupId>
                    <artifactId>jaxb-runtime</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>

                            <executable>true</executable>
                            <showDeprecation>true</showDeprecation>
                            <debug>true</debug>
                            <debuglevel>lines,vars,source</debuglevel>
                            <optimize>false</optimize>
                            <verbose>false</verbose>
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>

                            <compilerVersion>${java.version}</compilerVersion>
                            <release>${java.version}</release>
                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <encoding>${project.build.outputEncoding}</encoding>

                            <meminitial>128m</meminitial>
                            <maxmem>512m</maxmem>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>9.0</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>compile</phase>
                            </execution>
                            <execution>
                                <id>default-testCompile</id>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <phase>test-compile</phase>
                                <configuration>
                                    <skip>${compile-tests.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- License profile -->
        <profile>
            <id>license</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${maven-license-plugin.version}</version>
                        <configuration>
                            <verbose>false</verbose>
                            <failOnNotUptodateHeader>false</failOnNotUptodateHeader>
                            <failOnMissingHeader>false</failOnMissingHeader>
                            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                            <excludes>
                                <exclude>src/main/resources/META-INF/**</exclude>
                                <exclude>src/**/resources/application*</exclude>
                                <exclude>src/test/resources/mockito-extensions/**</exclude>
                            </excludes>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <organizationName>${project.organization.name}</organizationName>
                            <licenseName>${license.licenseName}</licenseName>
                            <licenseResolver>${license.licenseResolver}</licenseResolver>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-license-resources</id>
                                <goals>
                                    <goal>add-third-party</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <includedScopes>runtime,compile</includedScopes>
                                    <includeTransitiveDependencies>true</includeTransitiveDependencies>
                                    <fileTemplate>${project.basedir}/license/third-party.ftl</fileTemplate>
                                </configuration>
                            </execution>
                            <execution>
                                <id>generate-license-headers</id>
                                <goals>
                                    <goal>update-file-header</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Allure reports profile -->
        <profile>
            <id>allure-reports</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.qameta.allure</groupId>
                        <artifactId>allure-maven</artifactId>
                        <version>${maven-qameta-allure-plugin.version}</version>
                        <configuration>
                            <reportVersion>${allure-report.version}</reportVersion>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <reportingOutputDirectory>${project.build.directory}</reportingOutputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test-jar profile -->
        <profile>
            <id>test-jar</id>
            <properties>
                <package-tests.skip>false</package-tests.skip>
            </properties>
        </profile>

        <!-- Dev profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <enforce.java.skip>true</enforce.java.skip>
                <enforce.maven.skip>true</enforce.maven.skip>
                <enforce.plugin.skip>true</enforce.plugin.skip>
                <excludeDevtools>false</excludeDevtools>
                <repackage.skip>true</repackage.skip>
                <logback.loglevel>DEBUG</logback.loglevel>
            </properties>
        </profile>

        <!-- Test profile -->
        <profile>
            <id>test</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test</exists>
                </file>
            </activation>
            <properties>
                <failsafe.memory>-Xms1g -Xmx1500m -Xss256k</failsafe.memory>
                <integration-tests.skip>false</integration-tests.skip>
                <surefire.jmxEnabled>-Dcom.sun.management.jmxremote=true</surefire.jmxEnabled>
                <surefire.memory>-Xmx1024m</surefire.memory>
                <surefire.stackVersion>-Djava.net.preferIPv4Stack=true</surefire.stackVersion>
                <unit-tests.skip>false</unit-tests.skip>
            </properties>
        </profile>

        <!-- Reporting profile -->
        <profile>
            <id>reporting</id>
            <properties>
                <skipDeploy>true</skipDeploy>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${maven-site-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>stage-for-scm-publish</id>
                                <goals>
                                    <goal>stage</goal>
                                </goals>
                                <phase>post-site</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
