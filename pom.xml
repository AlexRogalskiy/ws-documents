<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sensiblemetrics.api.ws</groupId>
    <artifactId>parent</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <name>com.sensiblemetrics.api.ws</name>
    <description>WS Documents parent POM</description>
    <url>https://github.com/AlexRogalskiy/ws-documents/</url>
    <inceptionYear>2020</inceptionYear>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <maven.version>3.6.0</maven.version>

        <image.from.path>openjdk:latest</image.from.path>
        <image.to.path>registry.hub.docker.com/alexanderr/ws-documents</image.to.path>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.testTarget>${java.version}</maven.compiler.testTarget>
        <maven.compiler.testSource>${java.version}</maven.compiler.testSource>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <maven.compiler.showWarnings>true</maven.compiler.showWarnings>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <repackage.skip>false</repackage.skip>
        <excludeDevtools>true</excludeDevtools>
        <maven.url>localhost</maven.url>
        <version.suffix>alpha</version.suffix>
        <maven.multiModuleProjectDirectory>./</maven.multiModuleProjectDirectory>

        <license.licenseName>default</license.licenseName>
        <license.licenseResolver>${project.baseUri}src/license</license.licenseResolver>

        <jacoco-rule.line.length>100</jacoco-rule.line.length>
        <jacoco-check.skip>false</jacoco-check.skip>
        <jacoco.coverage.exclusions>**/application/config/*</jacoco.coverage.exclusions>
        <jacoco.percentage.instruction>0.20</jacoco.percentage.instruction>

        <skipTests>false</skipTests>
        <failIfNoTests>false</failIfNoTests>
        <compile-tests.skip>false</compile-tests.skip>
        <package-tests.skip>true</package-tests.skip>
        <allure-report.version>2.13.1</allure-report.version>

        <commons.version>0.1.0-SNAPSHOT</commons.version>
        <spring-boot.version>2.3.4.RELEASE</spring-boot.version>
        <lombok.version>1.18.12</lombok.version>
        <slf4j-api.version>1.7.30</slf4j-api.version>
        <logback.version>1.2.3</logback.version>
        <awaitility.version>4.0.3</awaitility.version>
        <awaitility-proxy.version>3.1.6</awaitility-proxy.version>

        <allure.version>2.13.5</allure.version>
        <java-hamcrest.version>2.0.0.0</java-hamcrest.version>
        <hamcrest.version>2.2</hamcrest.version>
        <hamcrest-matchers.version>2.0.0</hamcrest-matchers.version>
        <mockito.version>3.5.11</mockito.version>
        <mockito-helpers.version>2.0.0</mockito-helpers.version>
        <assertj.version>3.17.2</assertj.version>
        <junit-quickcheck.version>0.9.1</junit-quickcheck.version>
        <junit-jupiter.version>5.7.0</junit-jupiter.version>
        <junit-platform.version>1.7.0</junit-platform.version>
        <mockito-junit-jupiter.version>3.5.11</mockito-junit-jupiter.version>

        <validation-api.version>2.0.1.Final</validation-api.version>
        <guava.version>29.0-jre</guava.version>
        <wsdl4j.version>1.6.3.wso2v3</wsdl4j.version>
        <plexus-utils.version>3.3.0</plexus-utils.version>
        <commons-lang3.version>3.11</commons-lang3.version>

        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-flatten-plugin.version>1.2.5</maven-flatten-plugin.version>
        <maven-release-plugin.version>3.0.0-M1</maven-release-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-qameta-allure-plugin.version>2.10.0</maven-qameta-allure-plugin.version>
        <maven-xml-plugin.version>1.0.2</maven-xml-plugin.version>
        <maven-dependency-check-plugin.version>5.3.2</maven-dependency-check-plugin.version>
        <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
        <maven-license-plugin.version>2.0.0</maven-license-plugin.version>
        <maven-plugin-os.version>1.6.2</maven-plugin-os.version>
        <maven-jacoco-plugin.version>0.8.6</maven-jacoco-plugin.version>
        <maven-sonar-plugin.version>3.7.0.1746</maven-sonar-plugin.version>
        <maven-jib-plugin.version>2.5.2</maven-jib-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <maven-git-commit-id-plugin.version>4.0.0</maven-git-commit-id-plugin.version>
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <maven-spotbugs-plugin.version>4.0.4</maven-spotbugs-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
    </properties>

    <issueManagement>
        <url>https://github.com/AlexRogalskiy/ws-documents/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <distributionManagement>
        <site>
            <id>GitHub</id>
            <name>GitHub Repository</name>
            <url>scm:git:git@github.com/AlexRogalskiy/ws-documents.git</url>
        </site>
    </distributionManagement>

    <ciManagement>
        <system>GitHub</system>
        <url>http://gihub.com/AlexRogalskiy/ws-documents/runs</url>
    </ciManagement>

    <profiles>
        <!-- Flatten pom profile -->
        <profile>
            <id>flatten-pom</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                        <version>${maven-flatten-plugin.version}</version>
                        <inherited>true</inherited>`
                        <executions>
                            <execution>
                                <id>flatten</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>flatten</goal>
                                </goals>
                                <configuration>
                                    <updatePomFile>true</updatePomFile>
                                    <flattenMode>oss</flattenMode>
                                    <embedBuildProfileDependencies>true</embedBuildProfileDependencies>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <pomElements>
                                        <properties>remove</properties>
                                        <parent>expand</parent>
                                        <distributionManagement>remove</distributionManagement>
                                        <dependencyManagement>resolve</dependencyManagement>
                                        <repositories>remove</repositories>
                                        <pluginManagement>keep</pluginManagement>
                                        <dependencies>keep</dependencies>
                                        <build>keep</build>
                                    </pomElements>
                                </configuration>
                            </execution>
                            <execution>
                                <id>flatten.clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- GPG profile -->
        <profile>
            <id>sign</id>
            <properties>
                <gpg.passphrase>password</gpg.passphrase>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Checkstyle profile -->
        <profile>
            <id>checkstyle</id>
            <properties>
                <checkstyle-check.skip>false</checkstyle-check.skip>
                <checkstyle.version>8.36.1</checkstyle.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>${checkstyle.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <failsOnError>true</failsOnError>
                            <failOnViolation>true</failOnViolation>
                            <includeTestResources>false</includeTestResources>
                            <maxAllowedViolations>0</maxAllowedViolations>
                            <violationSeverity>warning</violationSeverity>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <consoleOutput>true</consoleOutput>
                            <skip>${checkstyle-check.skip}</skip>
                            <propertyExpansion>lineLength=${jacoco-rule.line.length}</propertyExpansion>
                            <configLocation>sun_checks.xml</configLocation>
                        </configuration>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Find bugs profile -->
        <profile>
            <id>find-bugs</id>
            <properties>
                <findbugs-check.skip>false</findbugs-check.skip>
                <spotbugs.version>4.1.2</spotbugs.version>
            </properties>
            <build>
                <plugins>
                    <!-- Findbugs -->
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${maven-spotbugs-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.github.spotbugs</groupId>
                                <artifactId>spotbugs</artifactId>
                                <version>${spotbugs.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <skip>${findbugs-check.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Compile with debug profile -->
        <profile>
            <id>compile-with-debug</id>
            <properties>
                <maven.compiler.debug>true</maven.compiler.debug>
                <maven.compiler.debuglevel>lines,vars,source</maven.compiler.debuglevel>
                <maven.compiler.verbose>true</maven.compiler.verbose>
            </properties>
        </profile>

        <!-- Generate build properties profile -->
        <profile>
            <id>generate-build-properties</id>
            <activation>
                <file>
                    <exists>${basedir}/src</exists>
                </file>
            </activation>
            <properties>
                <ci.build.number/>
                <ci.build.tag/>
                <ci.build.url/>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>pl.project13.maven</groupId>
                            <artifactId>git-commit-id-plugin</artifactId>
                            <version>${maven-git-commit-id-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>set-git-properties</id>
                                    <phase>initialize</phase>
                                    <goals>
                                        <goal>revision</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <prefix>git</prefix>
                                <dateFormat>yyyy-MM-dd'T'HH:mm:ss.SSSZ</dateFormat>
                                <verbose>false</verbose>
                                <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                                <generateGitPropertiesFile>false</generateGitPropertiesFile>
                                <failOnNoGitDirectory>false</failOnNoGitDirectory>
                            </configuration>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-antrun-plugin</artifactId>
                            <version>${maven-antrun-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>generate-build-properties</id>
                                    <phase>generate-resources</phase>
                                    <goals>
                                        <goal>run</goal>
                                    </goals>
                                    <configuration>
                                        <target>
                                            <mkdir dir="target/classes/"/>
                                            <propertyfile file="target/classes/build.properties">
                                                <entry key="pom.name" value="${project.name}"/>
                                                <entry key="pom.groupId" value="${project.groupId}"/>
                                                <entry key="pom.artifactId" value="${project.artifactId}"/>
                                                <entry key="pom.version" value="${project.version}"/>
                                                <entry key="pom.packaging" value="${project.packaging}"/>
                                                <entry key="git.branch" value="${git.branch}"/>
                                                <entry key="git.commit.tags" value="${git.tags}"/>
                                                <entry key="git.commit.id" value="${git.commit.id}"/>
                                                <entry key="git.commit.id.describe" value="${git.commit.id.describe}"/>
                                                <entry key="git.commit.id.abbrev" value="${git.commit.id.abbrev}"/>
                                                <entry key="git.commit.user.name" value="${git.commit.user.name}"/>
                                                <entry key="git.commit.user.email" value="${git.commit.user.email}"/>
                                                <entry key="git.commit.message.full"
                                                       value="${git.commit.message.full}"/>
                                                <entry key="git.commit.message.short"
                                                       value="${git.commit.message.short}"/>
                                                <entry key="git.commit.time" value="${git.commit.time}"/>
                                                <entry key="ci.build.number" value="${ci.build.number}"/>
                                                <entry key="ci.build.tag" value="${ci.build.tag}"/>
                                                <entry key="ci.build.url" value="${ci.build.url}"/>
                                            </propertyfile>
                                        </target>
                                    </configuration>
                                </execution>
                            </executions>
                            <dependencies>
                                <dependency>
                                    <groupId>commons-net</groupId>
                                    <artifactId>commons-net</artifactId>
                                    <version>3.6</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.ant</groupId>
                                    <artifactId>ant-commons-net</artifactId>
                                    <version>1.10.8</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.ant</groupId>
                                    <artifactId>ant-nodeps</artifactId>
                                    <version>1.8.1</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Unit tests with code coverage profile -->
        <profile>
            <id>unit-test</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test</exists>
                </file>
            </activation>
            <properties>
                <testAgent/>
                <test-groups.include/>
                <parallel.tests>2</parallel.tests>

                <unit-tests.skip>${skipTests}</unit-tests.skip>
                <failIfNoTests>true</failIfNoTests>

                <surefire.memory>
                    -Xmx1024m
                    -Dsun.zip.disableMemoryMapping=true
                </surefire.memory>
                <surefire.fileEncoding>-Dfile.encoding=${project.build.sourceEncoding}</surefire.fileEncoding>
                <surefire.jmxEnabled>-Dcom.sun.management.jmxremote=false</surefire.jmxEnabled>
                <surefire.stackVersion>-Djava.net.preferIPv4Stack=true</surefire.stackVersion>
                <surefire.timezone>-Duser.timezone=US/Eastern</surefire.timezone>
                <surefire.commands>
                    -Duser.language=en
                    -Duser.country=GB
                    --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                    --illegal-access=permit
                    --enable-preview
                </surefire.commands>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${maven-jacoco-plugin.version}</version>
                            <configuration>
                                <excludes>
                                    <exclude>${jacoco.coverage.exclusions}</exclude>
                                </excludes>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>before-tests</id>
                                    <phase>process-test-classes</phase>
                                    <goals>
                                        <goal>prepare-agent</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${unit-tests.skip}</skip>
                                        <destFile>${project.build.directory}/jacoco.exec</destFile>
                                        <propertyName>testAgent</propertyName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>after-tests</id>
                                    <phase>test</phase>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${unit-tests.skip}</skip>
                                        <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>${maven-surefire-plugin.version}</version>
                            <configuration>
                                <disableXmlReport>true</disableXmlReport>
                                <skipTests>${unit-tests.skip}</skipTests>
                                <groups>${test-groups.include}</groups>
                                <reportFormat>plain</reportFormat>
                                <testFailureIgnore>false</testFailureIgnore>
                                <useSystemClassLoader>false</useSystemClassLoader>
                                <printSummary>true</printSummary>
                                <useFile>false</useFile>
                                <forkedProcessTimeoutInSeconds>21600</forkedProcessTimeoutInSeconds>
                                <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                <argLine>
                                    @{testAgent}
                                    ${surefire.memory}
                                    ${surefire.fileEncoding}
                                    ${surefire.jmxEnabled}
                                    ${surefire.stackVersion}
                                    ${surefire.timezone}
                                    ${surefire.commands}
                                </argLine>
                                <includes>
                                    <include/>
                                </includes>
                                <properties>
                                    <systemPropertyVariables>
                                        <reportDirectory>
                                            ${project.build.directory}/allure-report
                                        </reportDirectory>
                                        <allure.results.directory>
                                            ${project.build.directory}/allure-results
                                        </allure.results.directory>
                                        <java.awt.headless>true</java.awt.headless>
                                    </systemPropertyVariables>
                                </properties>
                            </configuration>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-report-plugin</artifactId>
                            <version>${maven-surefire-report-plugin.version}</version>
                            <configuration>
                                <showSuccess>false</showSuccess>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <!-- Use in lifecycle -->
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Integration tests with code coverage profile -->
        <profile>
            <id>integration-test</id>
            <activation>
                <file>
                    <exists>${basedir}/src/test</exists>
                </file>
            </activation>
            <properties>
                <itAgent/>
                <test-groups.include/>
                <parallel.tests>2</parallel.tests>

                <integration-tests.skip>${skipTests}</integration-tests.skip>
                <failIfNoTests>true</failIfNoTests>

                <failsafe.memory>-Xmx512m</failsafe.memory>
                <failsafe.timezone>-Duser.timezone=US/Eastern</failsafe.timezone>

                <failsafe.commands>
                    -Duser.language=en
                    -Duser.country=GB
                    --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                    --illegal-access=permit
                    --enable-preview
                </failsafe.commands>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${maven-jacoco-plugin.version}</version>
                            <configuration>
                                <excludes>
                                    <exclude>${jacoco.coverage.exclusions}</exclude>
                                </excludes>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>before-tests</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>prepare-agent-integration</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${integration-tests.skip}</skip>
                                        <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                                        <propertyName>itAgent</propertyName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>after-tests</id>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>report-integration</goal>
                                    </goals>
                                    <configuration>
                                        <skip>${integration-tests.skip}</skip>
                                        <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-failsafe-plugin</artifactId>
                            <version>${maven-failsafe-plugin.version}</version>
                            <configuration>
                                <disableXmlReport>true</disableXmlReport>
                                <skipTests>${integration-tests.skip}</skipTests>
                                <groups>${test-groups.include}</groups>
                                <threadCount>${parallel.tests}</threadCount>
                                <forkCount>${parallel.tests}</forkCount>
                                <reuseForks>true</reuseForks>
                                <argLine>
                                    @{itAgent}
                                    ${failsafe.memory}
                                    ${failsafe.timezone}
                                    ${failsafe.commands}
                                </argLine>
                                <useFile>false</useFile>
                                <reportFormat>plain</reportFormat>
                                <parallel>classes</parallel>
                                <redirectTestOutputToFile>true</redirectTestOutputToFile>
                                <trimStackTrace>false</trimStackTrace>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>integration-test</id>
                                    <goals>
                                        <goal>integration-test</goal>
                                        <goal>verify</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Source profile -->
        <profile>
            <id>source</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-source-plugin</artifactId>
                            <version>${maven-source-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>attach-source</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>jar-no-fork</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Javadoc profile -->
        <profile>
            <id>javadoc</id>
            <properties>
                <javadoc.properties>
                    -Xdoclint:none
                    -J-Xmx1024m
                    -notimestamp
                    -link http://docs.oracle.com/javase/8/docs/api/
                </javadoc.properties>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>${maven-javadoc-plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>attach-javadoc</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>jar</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>xml-maven-plugin</artifactId>
                            <version>${maven-xml-plugin.version}</version>
                            <configuration>
                                <transformationSets>
                                    <transformationSet>
                                        <dir>${project.build.directory}/generated-resources/xml-javadoc</dir>
                                        <includes>
                                            <include>${project.artifactId}-${project.version}-javadoc.xml</include>
                                        </includes>
                                        <outputDir>${project.build.directory}/generated-resources/xml-javadoc
                                        </outputDir>
                                    </transformationSet>
                                </transformationSets>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>transform-xmljavadoc</id>
                                    <phase>generate-resources</phase>
                                    <goals>
                                        <goal>transform</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <!-- Use in lifecycle -->
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Jib profile -->
        <profile>
            <id>jib</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${maven-jib-plugin.version}</version>
                        <configuration>
                            <allowInsecureRegistries>true</allowInsecureRegistries>
                            <from>
                                <image>${image.from.path}</image>
                            </from>
                            <container>
                                <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                                <jvmFlags>
                                    <jvmFlag>-Xdebug</jvmFlag>
                                    <jvmFlag>-Xms128m</jvmFlag>
                                    <jvmFlag>-Xmx128m</jvmFlag>
                                    <jvmFlag>-Duser.timezone=GMT+08</jvmFlag>
                                    <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                                    <jvmFlag>-Djava.awt.headless=true</jvmFlag>
                                    <jvmFlag>-XX:InitialRAMFraction=2</jvmFlag>
                                    <jvmFlag>-XX:MinRAMFraction=2</jvmFlag>
                                    <jvmFlag>-XX:MaxRAMFraction=2</jvmFlag>
                                    <jvmFlag>-XX:+UseG1GC</jvmFlag>
                                    <jvmFlag>-XX:MaxGCPauseMillis=100</jvmFlag>
                                    <jvmFlag>-XX:+UseStringDeduplication</jvmFlag>
                                </jvmFlags>
                                <ports>
                                    <port>8089</port>
                                </ports>
                                <format>Docker</format>
                            </container>
                            <to>
                                <image>${image.to.path}:${project.version}</image>
                                <tags>
                                    <tag>alpine</tag>
                                    <tag>latest</tag>
                                </tags>
                            </to>
                        </configuration>
                        <executions>
                            <execution>
                                <id>dockerBuild</id>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>build</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- JDK 8 and minor versions -->
        <profile>
            <id>non_module_java</id>
            <activation>
                <jdk>(,8]</jdk>
            </activation>
            <properties>
                <java.version>8</java.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>
                            <executable>true</executable>
                            <showDeprecation>true</showDeprecation>
                            <debug>true</debug>
                            <debuglevel>lines,vars,source</debuglevel>
                            <optimize>false</optimize>
                            <verbose>false</verbose>

                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <encoding>${project.build.outputEncoding}</encoding>
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>
                            <compilerArgs>
                                -XDignore.symbol.file
                                -Xlint:all
                            </compilerArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-testCompile</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <configuration>
                                    <skip>${compile-tests.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>8.0.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- JDK 11 and major versions -->
        <profile>
            <id>module_java</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
            <properties>
                <java.version>11</java.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>

                            <executable>true</executable>
                            <showDeprecation>true</showDeprecation>
                            <debug>true</debug>
                            <debuglevel>lines,vars,source</debuglevel>
                            <optimize>false</optimize>
                            <verbose>false</verbose>
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>

                            <compilerVersion>${java.version}</compilerVersion>
                            <release>${java.version}</release>
                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <encoding>${project.build.outputEncoding}</encoding>

                            <meminitial>128m</meminitial>
                            <maxmem>512m</maxmem>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default-compile</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-testCompile</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                                <configuration>
                                    <skip>${compile-tests.skip}</skip>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>8.0.1</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.jaxb</groupId>
                    <artifactId>jaxb-runtime</artifactId>
                </dependency>
            </dependencies>
        </profile>

        <!-- License profile -->
        <profile>
            <id>license</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${maven-license-plugin.version}</version>
                        <configuration>
                            <verbose>false</verbose>
                            <failOnNotUptodateHeader>false</failOnNotUptodateHeader>
                            <failOnMissingHeader>false</failOnMissingHeader>
                            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                            <excludes>
                                <exclude>src/main/resources/META-INF/**</exclude>
                                <exclude>src/**/resources/application*</exclude>
                                <exclude>src/test/resources/mockito-extensions/**</exclude>
                            </excludes>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <organizationName>${project.organization.name}</organizationName>
                            <licenseName>${license.licenseName}</licenseName>
                            <licenseResolver>${license.licenseResolver}</licenseResolver>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-license-resources</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <includedScopes>runtime,compile</includedScopes>
                                    <includeTransitiveDependencies>true</includeTransitiveDependencies>
                                    <fileTemplate>${project.basedir}/src/license/third-party.ftl</fileTemplate>
                                </configuration>
                                <goals>
                                    <goal>add-third-party</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>generate-license-headers</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>update-file-header</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Allure reports profile -->
        <profile>
            <id>allure-reports</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.qameta.allure</groupId>
                        <artifactId>allure-maven</artifactId>
                        <version>${maven-qameta-allure-plugin.version}</version>
                        <configuration>
                            <reportVersion>${allure-report.version}</reportVersion>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <reportingOutputDirectory>${project.build.directory}</reportingOutputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Test-jar profile -->
        <profile>
            <id>test-jar</id>
            <properties>
                <package-tests.skip>false</package-tests.skip>
            </properties>
        </profile>

        <!-- Development profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <repackage.skip>true</repackage.skip>
                <excludeDevtools>false</excludeDevtools>
                <logback.loglevel>DEBUG</logback.loglevel>
            </properties>
        </profile>

        <!-- Test profile -->
        <profile>
            <id>test</id>
            <properties>
                <surefire.memory>
                    -Xmx4096m
                </surefire.memory>
                <failsafe.memory>-Xms1g -Xmx1500m -Xss256k</failsafe.memory>
                <surefire.jmxEnabled>-Dcom.sun.management.jmxremote=true</surefire.jmxEnabled>
                <surefire.stackVersion>-Djava.net.preferIPv4Stack=true</surefire.stackVersion>
                <unit-tests.skip>false</unit-tests.skip>
                <integration-tests.skip>false</integration-tests.skip>
            </properties>
        </profile>

        <!-- Reporting profile -->
        <profile>
            <id>reporting</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>${maven-site-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>stage-for-scm-publish</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>stage</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skipDeploy>true</skipDeploy>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <reporting>
        <outputDirectory>${project.build.directory}/release</outputDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-changes-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>changes-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <configuration>
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependencies</report>
                            <report>dependency-info</report>
                            <report>dependency-management</report>
                            <report>plugin-management</report>
                            <report>issue-management</report>
                            <report>ci-management</report>
                            <report>licenses</report>
                            <report>plugins</report>
                            <report>summary</report>
                            <report>team</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <repository>
            <id>central-1</id>
            <name>Central Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </repository>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </repository>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>false</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </repository>
        <repository>
            <id>projectlombok.org</id>
            <name>ProjectLombok repo</name>
            <url>https://projectlombok.org/edge-releases</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <directory>${maven.multiModuleProjectDirectory}/.build/bin/${project.name}</directory>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${maven-plugin-os.version}</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${maven-jib-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <retryFailedDeploymentCount>10</retryFailedDeploymentCount>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <compress>true</compress>
                        <manifest>
                            <packageName>${project.groupId}</packageName>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>true</addClasspath>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>${project.artifactId}.${project.version}</customClasspathLayout>
                        </manifest>
                        <manifestEntries>
                            <Contains-Sources>java,class</Contains-Sources>
                            <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                            <Implementation-Title>${project.description}</Implementation-Title>
                            <Implementation-Version>${project.version}</Implementation-Version>
                            <Implementation-Build>${project.build.finalName}</Implementation-Build>
                            <Specification-Title>${project.description}</Specification-Title>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Bundle-License>${project.organization.name}</Bundle-License>
                            <X-Builder>Maven ${maven.version}</X-Builder>
                            <X-Build-Time>${maven.build.timestamp}</X-Build-Time>
                            <X-Build-Os>${os.name}</X-Build-Os>
                        </manifestEntries>
                    </archive>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <skip>${package-tests.skip}</skip>
                            <skipIfEmpty>true</skipIfEmpty>
                            <includes>
                                <include>**/common/</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${maven-sonar-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven-jacoco-plugin.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacocoArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <skip>${jacoco-check.skip}</skip>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.percentage.instruction}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <executions>
                    <execution>
                        <id>clean-generated-sources</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${java.io.tmpdir}</directory>
                                    <directory>${project.basedir}/src/main/generated-sources</directory>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <licenses>
        <license>
            <name>The GNU General Public License, Version 3.0</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.html</url>
            <distribution>repo</distribution>
            <comments>GNU General Public License v3.0</comments>
        </license>
    </licenses>

    <organization>
        <name>SensibleMetrics, Inc., Saint-Petersburg (RU)</name>
        <url>https://www.sensible-metrics.com/</url>
    </organization>

    <developers>
        <developer>
            <id>alexander.rogalskiy</id>
            <name>Alexander Rogalskiy</name>
            <email>alexander.rogalskiy@yandex.ru</email>
            <timezone>+3</timezone>
            <url>http://github.com/AlexRogalskiy</url>
            <organization>SensibleMetrics, Inc.</organization>
            <organizationUrl>https://www.sensible-metrics.com/</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <properties>
                <github>https://github.com/AlexRogalskiy</github>
            </properties>
        </developer>
    </developers>

    <modules>
        <module>modules/commons</module>
        <module>modules/document-generator</module>
    </modules>

    <dependencies>
        <!-- Spring library dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- Wsdl4j library dependencies -->
        <dependency>
            <groupId>org.wso2.wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
            <version>${wsdl4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>plexus-utils</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>${plexus-utils.version}</version>
        </dependency>

        <!-- Guava library dependencies -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Apache commons library dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <!-- Hibernate validator library dependencies -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>classmate</artifactId>
                    <groupId>com.fasterxml</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <!-- Logback library dependencies -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Slf4j library dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <!-- Lombok library dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- Spring test library dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-library</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test-autoconfigure</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- JUnit test library dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-migrationsupport</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-console</artifactId>
            <version>${junit-platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Hibernate validator test library dependencies -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-test-utils</artifactId>
            <version>${hibernate-validator.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Awaitility test library dependencies -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-proxy</artifactId>
            <version>${awaitility-proxy.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mockito test library dependencies -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>it.ozimov</groupId>
            <artifactId>mockito-helpers</artifactId>
            <version>${mockito-helpers.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Allure reporting library dependencies -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-junit5</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-java-commons</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Hamcrest test library dependencies -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>java-hamcrest</artifactId>
            <version>${java-hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>it.ozimov</groupId>
            <artifactId>hamcrest-matchers</artifactId>
            <version>${hamcrest-matchers.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- AssertJ test library dependencies -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
