name: Document-Generator-Web-Service-deploy

env:
  IMAGE_NAME: $GITHUB_REPOSITORY

on:
  release:
    types: published
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: 'Show release event information (${GITHUB_REF})'
        run: |
          echo "release.name     = ${{ github.event.release.name }}"
          echo "release.html_url = ${{ github.event.release.html_url }}"

      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Make Maven Wrapper executable
        if: contains(matrix.os, 'win') == false
        run: |
          chmod +x ./mvnw

      - name: Maven Package
        run: |
          ./mvnw -B clean compile package -DskipTests=true -P"module_java","test-jar","xsd"

      - name: Set global env
        id: global_env
        run: |
          GITHUB=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
          echo "::set-output name=IMAGE_NAME::${GITHUB#*/}"
          echo "::set-output name=DOCKERHUB_IMAGE_NAME::docker.pkg.github.com/${GITHUB#*/}"
          echo "::set-output name=DOCKERHUB_IMAGE::docker.pkg.github.com/${GITHUB}"

      - name: Build and tag image
        run: |
          docker build --file docker/java/Dockerfile -t "$DOCKERHUB_IMAGE/${{ steps.global_env.outputs.IMAGE_NAME }}:latest" -t "$DOCKERHUB_IMAGE/${{ steps.global_env.outputs.IMAGE_NAME }}:${GITHUB_SHA::8}" .

      - name: Docker login
        run: |
          docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image
        run: |
          docker push "$DOCKERHUB_IMAGE/${{ steps.global_env.outputs.IMAGE_NAME }}:latest"
