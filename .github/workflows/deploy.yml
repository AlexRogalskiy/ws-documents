name: Deploy

on:
  release:
    types: published
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false

      - name: 'Show release event information (${GITHUB_REF})'
        run: |
          echo "release.name     = ${{ github.event.release.name }}"
          echo "release.html_url = ${{ github.event.release.html_url }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Make Maven Wrapper executable
        if: contains(matrix.os, 'win') == false
        run: |
          chmod +x ./mvnw

      - name: Maven Package
        run: |
          ./mvnw clean compile package --errors --batch-mode -DskipTests=true -P"module_java","test-jar","xsd","dev"

      - name: Set global env
        id: global_env
        run: |
          GITHUB=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
          echo "::set-output name=IMAGE_NAME::${GITHUB#*/}"
          echo "::set-output name=DOCKERHUB_IMAGE::docker.pkg.github.com/${GITHUB}"
          echo "::set-output name=DOCKERHUB_IMAGE_TAG::docker.pkg.github.com/${GITHUB}/${GITHUB#*/}"

      - name: Build and tag image
        run: |
          docker build --file modules/document-generator/src/main/docker/java/Dockerfile -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_TAG }}:latest" -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_TAG }}:${GITHUB_SHA::8}" .

      - name: Docker login
        run: |
          docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image
        run: |
          docker push "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_TAG }}:latest"
